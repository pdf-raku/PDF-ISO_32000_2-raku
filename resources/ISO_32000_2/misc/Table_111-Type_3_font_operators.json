{
  "table": {
    "caption": "Table 111 — Type 3 font operators",
    "head": [
      "Operands",
      "Operator",
      "Description"
    ],
    "rows": [
      [
        "wx wy",
        "d0",
        "Set width information for the glyph and declare that the glyph description specifies both its shape and its colour.\nNOTE 1 This operator name ends in the digit 0.\nwx denotes the horizontal displacement in the glyph coordinate system; it is consistent with the corresponding width in the font’s Widths array. wy is 0 (see 9.2.4, \"Glyph positioning and metrics\").\nThis operator is only be permitted as the first operator in a content stream appearing in a Type 3 font’s CharProcs dictionary. It is typically used only if the glyph description executes operators to set the colour or other colour-related parameters explicitly.\nNOTE 2 An image does set the colour space and colour explicitly; an image mask does not and requires explicit operators to do so for it."
      ],
      [
        "wx wy llx lly urx ury",
        "d1",
        "Set width and bounding box information for the glyph and declare that the glyph description specifies only shape, not colour.\nNOTE 3 This operator name ends in the digit 1.\nwx denotes the horizontal displacement in the glyph coordinate system; it is consistent with the corresponding width in the font’s Widths array. wy is 0 (see 9.2.4, \"Glyph positioning and metrics\").\nllx and lly denote the coordinates of the lower-left corner, and urx and ury denote the upper-right corner, of the glyph bounding box. The glyph bounding box is the smallest rectangle, oriented with the axes of the glyph coordinate system, that completely encloses all marks placed on the page as a result of executing the glyph’s description. The declared bounding box is correct — in other words, sufficiently large to enclose the entire glyph. If any marks fall outside this bounding box, the result is implementation-dependent.\nA glyph description that begins with the d1 operator does not execute any operators that set the colour (or other colour-related parameters including transparency) in the graphics state; any use of such operators is ignored and the glyph stream continues to be processed without error (see 8.6.8, \"Colour operators\"). The glyph description is executed solely to determine the glyph’s shape. Its colour is determined by the graphics state in effect each time this glyph is painted by a text-showing operator. For the same reason, the glyph description does not include an image; however, an image mask is acceptable, since it merely defines a region of the page to be painted with the current colour.\nThis operator is used only in a content stream appearing in a Type 3 font’s CharProcs dictionary."
      ]
    ]
  }
}